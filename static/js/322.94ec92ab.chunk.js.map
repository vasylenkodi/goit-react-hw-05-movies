{"version":3,"file":"static/js/322.94ec92ab.chunk.js","mappings":"6LA6DA,UAvDqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAQpD,OANAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OAVQ,uCAUR,OAAeZ,EAAf,YATM,4DAURa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIZ,EAAQY,EAAZ,GACb,GAAE,IAGDb,IACE,4BACE,gCACE,SAAC,KAAD,CAAMc,GAAIV,EAAaW,QAAvB,sBACA,gBACEC,IAAG,0CAAqChB,EAAKiB,aAC7CC,IAAI,MAEN,0BACGlB,EAAKmB,MADR,KACiBnB,EAAKoB,aAAaC,MAAM,EAAG,GAD5C,QAGA,yCAAmC,GAAlBrB,EAAKsB,cAAiBC,QAAQ,GAA/C,QACA,sCACA,uBAAIvB,EAAKwB,YACT,oCACA,wBACGxB,EAAKyB,OAAOC,KAAI,SAAAC,GAAK,OACpB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADK,UAK1B,gCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAG,OAAOR,MAAO,CAAEC,KAAMV,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMiB,GAAG,UAAUR,MAAO,CAAEC,KAAMV,GAAlC,8BAMN,SAAC,KAAD,MAIP,C","sources":["components/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst PARAMS = 'api_key=959330b1b48c95e1fde96a992bbede29&language=en-US';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n  const location = useLocation();\n  const prevLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetch(`${BASE_URL}${movieId}?${PARAMS}`)\n      .then(response => response.json())\n      .then(data => setFilm(data));\n  }, []);\n\n  return (\n    film && (\n      <div>\n        <section>\n          <Link to={prevLocation.current}>Go back</Link>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n            alt=\"\"\n          />\n          <h1>\n            {film.title} ({film.release_date.slice(0, 4)})\n          </h1>\n          <p>User Score: {(film.vote_average*10).toFixed(0)}%</p>\n          <h2>Overview</h2>\n          <p>{film.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {film.genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </section>\n        <section>\n          <h2>Additional information</h2>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: movieId }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: movieId }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </section>\n        <Outlet />\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","film","setFilm","location","useLocation","prevLocation","useRef","state","from","useEffect","fetch","then","response","json","data","to","current","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","id"],"sourceRoot":""}